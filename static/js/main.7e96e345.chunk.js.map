{"version":3,"sources":["PlayerSelector.js","Team.js","RecommendedChamp.js","RecommenderPage.js","App.js","serviceWorker.js","index.js"],"names":["PlayerSelector","props","useState","champImgSrc","setChampImgSrc","FormControl","InputLabel","NativeSelect","onChange","e","callback","target","value","disabled","selected","champNames","map","X","src","alt","Team","id","Grid","container","direction","spacing","alignItems","justify","item","xs","sm","md","lg","callbacks","RecommendedChamp","champInfo","style","width","RecommenderPage","champions","setChampions","recommended","setRecommended","setChampNames","ally1","setAlly1","ally2","setAlly2","ally3","setAlly3","ally4","setAlly4","enemy1","setEnemy1","enemy2","setEnemy2","enemy3","setEnemy3","enemy4","setEnemy4","enemy5","setEnemy5","a","fetch","response","json","data","Object","keys","ally","enemies","allies","filter","el","Array","from","Set","allyIds","enemyIds","push","key","enemy","axios","post","body","crossdomain","mode","useEffect","fetchChampions","Paper","backgroundColor","borderStyle","borderRadius","margin","Button","variant","onClick","color","border","xl","background","champId","i","j","indexOf","App","className","Toolbar","href","justifyContent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e96e345.chunk.js","sourcesContent":["import React, { useState} from \"react\";\r\n// import axios from 'axios';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n  const PlayerSelector = (props)  => {\r\n    // const  [champ,setChamp] = useState(\"\")\r\n    const  [champImgSrc,setChampImgSrc] = useState(\"\")\r\n\r\n\r\n    function MakeItem(X) {\r\n      return <option>{X}</option>;\r\n    };\r\n\r\n    function logChange(e) {\r\n      props.callback(e.target.value)\r\n      setChampImgSrc('http://ddragon.leagueoflegends.com/cdn/10.1.1/img/champion/' + e.target.value + '.png')\r\n    }\r\n\r\n    function getImage() {\r\n        if (champImgSrc === \"\") {\r\n            return (<div></div>)\r\n        } else {\r\n            return (<img src={champImgSrc} alt=\"A Champion\"  />)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n       <div>\r\n           {/* TODO: Give better alt */}\r\n          <div>\r\n            <FormControl>\r\n              <InputLabel></InputLabel>\r\n              <NativeSelect onChange={logChange}>\r\n                <option disabled selected value></option>\r\n                {props.champNames.map(MakeItem)}\r\n              </NativeSelect>\r\n            </FormControl>\r\n           \r\n         </div>\r\n         {getImage()}\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default  PlayerSelector;","import React from \"react\";\r\nimport PlayerSelector from './PlayerSelector';\r\n// import axios from 'axios';\r\nimport {Grid} from '@material-ui/core'\r\n\r\n  const Team = (props)  => {\r\n\r\n    function makePlayerSelectors() {\r\n      if (props.id ==='allies') {\r\n        return (\r\n          <Grid container direction=\"row\" spacing={4} alignItems=\"center\"\r\n          justify=\"center\" >\r\n            <Grid item xs={12} sm={3} md={3} lg={3}>\r\n              <PlayerSelector champNames={props.champNames} callback={props.callbacks[0]}></PlayerSelector>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3} md={3} lg={3}>\r\n              <PlayerSelector champNames={props.champNames} callback={props.callbacks[1]}></PlayerSelector>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3} md={3} lg={3}>\r\n              <PlayerSelector champNames={props.champNames} callback={props.callbacks[2]}></PlayerSelector>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3} md={3} lg={3}>\r\n              <PlayerSelector champNames={props.champNames} callback={props.callbacks[3]}></PlayerSelector>\r\n            </Grid>\r\n          </Grid>\r\n          )\r\n      } else if (props.id === 'enemies') {\r\n        return (<Grid container direction=\"row\" alignItems=\"center\"\r\n        justify=\"center\" spacing={4} >\r\n        <Grid item xs={12} sm={2} md={2} lg={2}>\r\n          <PlayerSelector champNames={props.champNames} callback={props.callbacks[0]}></PlayerSelector>\r\n        </Grid>\r\n        <Grid item xs={12} sm={2} md={2} lg={2}>\r\n          <PlayerSelector champNames={props.champNames} callback={props.callbacks[1]}></PlayerSelector>\r\n        </Grid>\r\n        <Grid item xs={12} sm={2} md={2} lg={2}>\r\n          <PlayerSelector champNames={props.champNames} callback={props.callbacks[2]}></PlayerSelector>\r\n        </Grid>\r\n        <Grid item xs={12} sm={2} md={2} lg={2}>\r\n          <PlayerSelector champNames={props.champNames} callback={props.callbacks[3]}></PlayerSelector>\r\n        </Grid>\r\n        <Grid item xs={12} sm={2} md={2} lg={2}>\r\n          <PlayerSelector champNames={props.champNames} callback={props.callbacks[4]}></PlayerSelector>\r\n        </Grid>\r\n      </Grid>)\r\n      } else {\r\n        return <div></div>\r\n      }\r\n    }\r\n\r\n    return (\r\n       <div>\r\n\r\n         {makePlayerSelectors()}\r\n\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default  Team;","import React from \"react\";\r\nimport {Grid} from '@material-ui/core'\r\n\r\n  const RecommendedChamp = (props)  => {\r\n\r\n\r\n    return (\r\n       <div>\r\n         <Grid container>\r\n            <Grid item xs={3}>\r\n              <img src={'http://ddragon.leagueoflegends.com/cdn/10.1.1/img/champion/' + props.champInfo['id'] + '.png'} alt=\"\" style={{width:\"75%\"}}></img>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              {props.champInfo['name']}\r\n            </Grid>\r\n         </Grid>       \r\n\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default  RecommendedChamp;","import React, { useState, useEffect} from \"react\";\r\nimport axios from 'axios';\r\nimport Team from './Team';\r\nimport RecommendedChamp from './RecommendedChamp';\r\nimport {Paper, Grid} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\n\r\n  const RecommenderPage = ()  => {\r\n    const  [champions,setChampions ]= useState({})\r\n    const  [recommended,setRecommended ]= useState([])\r\n    const  [champNames,setChampNames ]= useState([])\r\n    const  [ally1, setAlly1] = useState(\"\")\r\n    const  [ally2, setAlly2] = useState(\"\")\r\n    const  [ally3, setAlly3] = useState(\"\")\r\n    const  [ally4, setAlly4] = useState(\"\")\r\n    const  [enemy1, setEnemy1] = useState(\"\")\r\n    const  [enemy2, setEnemy2] = useState(\"\")\r\n    const  [enemy3, setEnemy3] = useState(\"\")\r\n    const  [enemy4, setEnemy4] = useState(\"\")\r\n    const  [enemy5, setEnemy5] = useState(\"\")\r\n\r\n    \r\n\r\n\r\n\r\n    async function fetchChampions() {\r\n      let response = await fetch('https://ddragon.leagueoflegends.com/cdn/10.1.1/data/en_US/champion.json')\r\n      response = await response.json()      \r\n      setChampions(response.data)\r\n      setChampNames(Object.keys(response.data))\r\n    }\r\n\r\n    async function compileTeams() {\r\n      let allies = [ally1, ally2, ally3, ally4]\r\n      let enemies = [enemy1, enemy2, enemy3, enemy4, enemy5]\r\n\r\n      allies = allies.filter(function (el) {\r\n        return el !== \"\"\r\n      })\r\n      enemies = enemies.filter(function (el) {\r\n        return el !== \"\"\r\n      })\r\n      allies = Array.from(new Set(allies))\r\n      enemies = Array.from(new Set(enemies))\r\n\r\n      let allyIds = []\r\n      let enemyIds = []\r\n\r\n      let ally\r\n      for (ally in allies) {\r\n        allyIds.push(champions[allies[ally]].key)\r\n      }\r\n      let enemy\r\n      for (enemy in enemies) {\r\n        enemyIds.push(champions[enemies[enemy]].key)\r\n      }\r\n\r\n      const response = await axios.post(\"https://deeplol-api.herokuapp.com/recommend\",\r\n            {body: {allies: allyIds, enemies: enemyIds}, crossdomain: true, mode: 'cors'})\r\n\r\n      setRecommended(response.data)\r\n\r\n    }\r\n\r\n    function MakeRecommendedItems(champId) {\r\n      let i;\r\n      let j;\r\n      for (i in champions) {\r\n        if (champions[i]['key'] == champId) {\r\n          j = i\r\n        }\r\n      }\r\n      return <Grid item xs={12}>\r\n              <Paper style={{backgroundColor:'rgba(75,83,83,0.8)', borderStyle: \"solid\"}}><b>#{recommended.indexOf(champId)+1}</b><hr/><RecommendedChamp champId={champId} champInfo={champions[j]}></RecommendedChamp></Paper>\r\n            </Grid>;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n      fetchChampions();\r\n    }, []);\r\n\r\n\r\n    return (\r\n       <div>\r\n\r\n        \r\n\r\n\r\n         <Grid container spacing={3}>\r\n\r\n        <Grid item xs={12}>\r\n        <Paper style={{backgroundColor:'rgba(75,83,83,0.8)', borderStyle: 'solid', borderRadius:\"10px\", margin:\"10px\"}}>\r\n\r\n          <Grid container>\r\n            \r\n            <Grid item xs={12} >\r\n            <h2>Allies</h2>\r\n            <Team champNames={champNames} id='allies' callbacks={[setAlly1, setAlly2, setAlly3, setAlly4]}></Team>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} style={{margin:25}}>\r\n            <h2>Enemies</h2>\r\n            <Team champNames={champNames} id='enemies' callbacks={[setEnemy1, setEnemy2, setEnemy3, setEnemy4, setEnemy5]}></Team>\r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n        </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Button variant=\"contained\" onClick={compileTeams} style={{spacing:\"3\", backgroundColor:'rgba(220,220,220,0.6)', color:\"black\", border:\"2px solid\", borderRadius:\"10px\"}}>\r\n            Recommend!\r\n          </Button>\r\n          {/* <Fab variant=\"extended\" aria-label=\"like\" onClick={compileTeams} style={{spacing:\"3\", backgroundColor:'rgba(191,211,211,0.85)', border:\"3px solid\"}}>\r\n          Recommend!\r\n          </Fab> */}\r\n        </Grid>\r\n        \r\n          \r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            {/* <Grid item xs={3} style={{backgroundColor:\"#123456\", height:'100%'}}></Grid> */}\r\n\r\n            <Grid item xs={6} xl={4} style={{background:\"rgba(12,34,56,0.5)\", borderRadius:\"10px\"}}>\r\n              <Grid container spacing={3} justify=\"center\"> \r\n                {recommended.map(MakeRecommendedItems)}\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* <Grid item xs={3} style={{backgroundColor:\"#123456\"}}></Grid> */}\r\n\r\n\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n          </Grid>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default  RecommenderPage;","import React from 'react';\nimport './App.css';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport RecommenderPage from './RecommenderPage'\nimport Button from '@material-ui/core/Button';\nimport {Paper, Grid} from '@material-ui/core';\n\nfunction App() { \n\n  return (\n    <div className=\"App\">\n      {/* TODO: Center align */}\n      <Toolbar><h1>Deep LoL</h1 >\n      \n      <Grid container alignItems=\"flex-start\" justify=\"flex-end\" direction=\"row\">\n        {/* <Button color=\"inherit\" style={{justifyContent:\"space-between\"}}>Donate</Button> */}\n        <a href=\"https://www.paypal.me/deeplol\">\n        <Button variant=\"contained\"style={{backgroundColor:'rgba(0,0,0)', color:\"grey\", border:\"1px solid\", borderRadius:\"20px\", justifyContent:\"space-between\"}}>\n            Donate!\n          </Button>\n        </a>\n        \n      </Grid>\n      \n      </Toolbar>\n\n      \n      <RecommenderPage>\n\n      </RecommenderPage>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}